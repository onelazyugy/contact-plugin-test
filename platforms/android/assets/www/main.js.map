{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cordova.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome {{ title }}!\\n  </h1>\\n  <div>\\n    <h3>TEST ANDROID RUN TIME PERMISSION</h3>\\n    <hr>\\n    <div style=\\\"background-color: lightseagreen; padding: 20px;\\\">\\n      <h4>ANDROID 6 MARSHMALLOW AND BEYONE</h4>\\n      <h5>minSdkVersion >= 23</h5>\\n      <h5>targetSdkVersion = 27</h5>\\n      <div>\\n        <div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"readContact(1)\\\">READ CONTACT</button>\\n        </div>\\n        <div class=\\\"row\\\">\\n          permission granted: \\n          <span *ngIf=\\\"permissionGranted\\\" style=\\\"background-color:green;\\\">{{permissionGranted}}</span> \\n          <span *ngIf=\\\"!permissionGranted\\\" style=\\\"background-color:red;\\\">{{permissionGranted}}</span> \\n        </div>\\n        <div class=\\\"row\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"writeExtStorage(1)\\\">WRITE EXTERNAL STORAGE</button>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n    <div style=\\\"background-color: orange; padding: 20px;\\\">\\n      <h4>ANDROID 5 LOLLIPOP AND BELOW</h4>\\n      <h5>minSdkVersion <= 19</h5>\\n      <h5>targetSdkVersion = 22</h5>\\n      <div>\\n        <div class=\\\"row\\\" style=\\\"margin-bottom: 20px;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"readContact(2)\\\">READ CONTACT</button>\\n        </div>\\n        <div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"writeExtStorage(2)\\\">WRITE EXTERNAL STORAGE</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CordovaService } from './cordova.service';\ndeclare var device;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Viet';\n  permissionGranted = false;\n  constructor(private cordovaService: CordovaService) {}\n\n  ngOnInit() {\n    // document.addEventListener('deviceready', () => {\n    //   alert(device.platform);\n    // }, false);\n  }\n\n  readContact = (num) => {\n    switch(num) {\n      case 1: {\n        console.log('contact type: ' + 1);\n        console.log('cordovaService:', this.cordovaService);\n        console.log('getCordova:', this.cordovaService.getCordova());\n        const cordova = this.cordovaService.getCordova();\n        try {\n          cordova.exec(\n            (res)=>{\n              console.log('inside successCallback:', res);\n              const responseJSON = JSON.parse(res);\n              console.log('responseJSON:', responseJSON);\n              this.permissionGranted = responseJSON.isUserGrantedPermission;\n              console.log('this.permissionGranted:', this.permissionGranted)\n            }, \n            (error)=>{\n              console.log('inside errorCallback:', error);\n            }, 'ContactPlugin', 'getContacts', []);\n        }catch(e){\n          console.log('error:', e);\n        }\n        break;\n      }\n      case 2: {\n        alert('contact type: ' + 2);\n        break;\n      }\n    }\n  }\n\n  writeExtStorage = (num) => {\n    switch(num) {\n      case 1: {\n        alert('storage type: ' + 1);\n        break;\n      }\n      case 2: {\n        alert('storage type: ' + 2);\n        break;\n      }\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CordovaService } from './cordova.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [CordovaService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, NgZone } from '@angular/core';\n// import { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject, fromEvent, Observable } from 'rxjs';\n// import { Observable } from 'rxjs';\n// import 'rxjs/add/observable/fromEvent';\n// import 'rxjs/add/operator/map';\n// https://medium.com/@EliaPalme/how-to-wrap-an-angular-app-with-apache-cordova-909024a25d79\nfunction _window(): any {\n  // return the global native browser window object\n  return window;\n}\n@Injectable()\nexport class CordovaService {\n  private resume: BehaviorSubject<boolean>;\n  constructor(private zone: NgZone) {\n    this.resume = new BehaviorSubject<boolean>(null);\n    fromEvent(document, 'resume').subscribe(event => {\n      this.zone.run(() => {\n        this.onResume();\n      });\n    });\n  }\n\n  getCordova(): any {\n    return _window().cordova;\n  }\n  onCordova(): Boolean {\n    return !!_window().cordova;\n  }\n  onResume(): void {\n    this.resume.next(true);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\nlet onDeviceReady = () => {\n  platformBrowserDynamic().bootstrapModule(AppModule);\n};\ndocument.addEventListener('deviceready', onDeviceReady, false);"],"sourceRoot":""}